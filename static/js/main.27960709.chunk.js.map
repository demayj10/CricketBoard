{"version":3,"sources":["lib/GlobalContext.js","lib/GlobalProvider.js","component/ButtonItem/ButtonItem.js","component/ButtonItem/index.js","component/ScoreCard/ScoreCard.js","component/ScoreCard/index.js","component/Board/Board.js","component/Board/index.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","GlobalProvider","props","addPoint","value","num","a","async","spots","state","team1","team2","valuePair","filter","vp","points","updated","push","sort","b","id","setState","clearBoard","emptyTeam1","emptyTeam2","global","data","this","GlobalContext","Provider","children","Component","buttonStyle","width","height","color","ButtonItem","loading","context","CircularProgress","IconButton","className","onClick","ShowChart","style","Clear","HighlightOff","contextType","theme","createMuiTheme","overrides","MuiInputBase","input","textAlign","ScoreCard","componentDidMount","teamName","handleChange","e","target","newSpots","Paper","elevation","square","ThemeProvider","TextField","onChange","List","map","s","ListItem","key","MuiListItem","root","display","Board","AppBar","position","Toolbar","Typography","BottomNavigation","showLabels","BottomNavigationAction","label","icon","Replay","Cancel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27960709.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext({});\r\n","import React from \"react\";\r\nimport GlobalContext from \"./GlobalContext\";\r\nimport {} from \"./cache\";\r\n\r\nclass GlobalProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      team1: [\r\n        { id: 0, value: \"20\", points: 0 },\r\n        { id: 1, value: \"19\", points: 0 },\r\n        { id: 2, value: \"18\", points: 0 },\r\n        { id: 3, value: \"17\", points: 0 },\r\n        { id: 4, value: \"16\", points: 0 },\r\n        { id: 5, value: \"15\", points: 0 },\r\n        { id: 6, value: \"Bull\", points: 0 }\r\n      ],\r\n      team2: [\r\n        { id: 0, value: \"20\", points: 0 },\r\n        { id: 1, value: \"19\", points: 0 },\r\n        { id: 2, value: \"18\", points: 0 },\r\n        { id: 3, value: \"17\", points: 0 },\r\n        { id: 4, value: \"16\", points: 0 },\r\n        { id: 5, value: \"15\", points: 0 },\r\n        { id: 6, value: \"Bull\", points: 0 }\r\n      ]\r\n    };\r\n  }\r\n\r\n  addPoint = async (value, num) => {\r\n    let spots = [];\r\n    if (num === 1) {\r\n      spots = this.state.team1;\r\n    } else {\r\n      spots = this.state.team2;\r\n    }\r\n\r\n    let valuePair = spots.filter(vp => {\r\n      return vp.value === value;\r\n    })[0];\r\n    let points = valuePair.points;\r\n    if (points < 3) {\r\n      points++;\r\n    }\r\n    valuePair.points = points;\r\n    let updated = spots.filter(vp => {\r\n      return vp.value !== value;\r\n    });\r\n    updated.push(valuePair);\r\n    updated.sort(function(a, b) {\r\n      return a.id - b.id;\r\n    });\r\n\r\n    if (num === 1) {\r\n      this.setState({\r\n        team1: updated\r\n      });\r\n    } else {\r\n      this.setState({\r\n        team2: updated\r\n      });\r\n    }\r\n  };\r\n\r\n  clearBoard = async () => {\r\n    let emptyTeam1 = [\r\n      { id: 0, value: \"20\", points: 0 },\r\n      { id: 1, value: \"19\", points: 0 },\r\n      { id: 2, value: \"18\", points: 0 },\r\n      { id: 3, value: \"17\", points: 0 },\r\n      { id: 4, value: \"16\", points: 0 },\r\n      { id: 5, value: \"15\", points: 0 },\r\n      { id: 6, value: \"Bull\", points: 0 }\r\n    ];\r\n    let emptyTeam2 = [\r\n      { id: 0, value: \"20\", points: 0 },\r\n      { id: 1, value: \"19\", points: 0 },\r\n      { id: 2, value: \"18\", points: 0 },\r\n      { id: 3, value: \"17\", points: 0 },\r\n      { id: 4, value: \"16\", points: 0 },\r\n      { id: 5, value: \"15\", points: 0 },\r\n      { id: 6, value: \"Bull\", points: 0 }\r\n    ];\r\n\r\n    this.setState({\r\n      team1: emptyTeam1,\r\n      team2: emptyTeam2\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const global = {\r\n      data: this.state,\r\n\r\n      addPoint: this.addPoint,\r\n      clearBoard: this.clearBoard\r\n    };\r\n\r\n    return (\r\n      <GlobalContext.Provider value={global}>\r\n        {this.props.children}\r\n      </GlobalContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalProvider;\r\n","import React, { Component } from \"react\";\r\nimport { IconButton, CircularProgress } from \"@material-ui/core\";\r\nimport { Clear, HighlightOff, ShowChart } from \"@material-ui/icons\";\r\n\r\nimport GlobalContext from \"../../lib/GlobalContext\";\r\n\r\nimport \"./ButtonItem.css\";\r\n\r\nconst buttonStyle = {\r\n  width: \"2.5em\",\r\n  height: \"2.5em\",\r\n  color: \"#c00000\"\r\n};\r\n\r\nexport class ButtonItem extends Component {\r\n  static contextType = GlobalContext;\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  addPoint = async (value, num) => {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    await this.context.addPoint(value, num);\r\n    this.setState({\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    const { value, points, num } = this.props;\r\n\r\n    if (loading) {\r\n      return <CircularProgress />;\r\n    }\r\n    switch (points) {\r\n      case 0:\r\n        return (\r\n          <IconButton\r\n            className=\"icon-button\"\r\n            onClick={() => this.addPoint(value, num)}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <IconButton\r\n            className=\"icon-button\"\r\n            onClick={() => this.addPoint(value, num)}\r\n          >\r\n            <ShowChart style={buttonStyle} />\r\n          </IconButton>\r\n        );\r\n      case 2:\r\n        return (\r\n          <IconButton\r\n            className=\"icon-button\"\r\n            onClick={() => this.addPoint(value, num)}\r\n          >\r\n            <Clear style={buttonStyle} />\r\n          </IconButton>\r\n        );\r\n      case 3:\r\n        return (\r\n          <IconButton className=\"icon-button\">\r\n            <HighlightOff style={buttonStyle} />\r\n          </IconButton>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default ButtonItem;\r\n","import ButtonItem from \"./ButtonItem\";\r\n\r\nexport default ButtonItem;\r\n","import React, { Component } from \"react\";\r\nimport { Paper, TextField, List, ListItem } from \"@material-ui/core\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport \"./ScoreCard.css\";\r\nimport ButtonItem from \"../ButtonItem/index\";\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiInputBase: {\r\n      input: {\r\n        textAlign: \"center\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport class ScoreCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      teamName: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({\r\n      teamName: `Team ${this.props.num}`\r\n    });\r\n  };\r\n\r\n  handleChange = input => e => {\r\n    this.setState({ [input]: e.target });\r\n  };\r\n\r\n  addPoint = async (value, num) => {\r\n    let newSpots = this.state.spots;\r\n    let valuePair = newSpots.filter(vp => {\r\n      return vp.value === value;\r\n    })[0];\r\n    let points = valuePair.points;\r\n    if (points < 3) {\r\n      points++;\r\n    }\r\n    valuePair.points = points;\r\n    let updated = newSpots.filter(vp => {\r\n      return vp.value !== value;\r\n    });\r\n    updated.push(valuePair);\r\n    updated.sort(function(a, b) {\r\n      return a.id - b.id;\r\n    });\r\n\r\n    this.setState({\r\n      spots: updated\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { teamName } = this.state;\r\n    const { spots, num } = this.props;\r\n\r\n    return (\r\n      <Paper elevation={18} square={true} className=\"scorecard\">\r\n        <ThemeProvider theme={theme}>\r\n          <div>\r\n            <TextField\r\n              value={teamName}\r\n              className=\"team-name\"\r\n              onChange={this.handleChange(\"team\")}\r\n            ></TextField>\r\n\r\n            <List className=\"button-list\">\r\n              {spots.map(s => (\r\n                <ListItem key={`${num}${s.value}`} className=\"list-item\">\r\n                  <ButtonItem value={s.value} points={s.points} num={num} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </ThemeProvider>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoreCard;\r\n","import ScoreCard from \"./ScoreCard\";\r\n\r\nexport default ScoreCard;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  List,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  ListItem,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { Replay, Cancel } from \"@material-ui/icons\";\r\nimport GlobalContext from \"../../lib/GlobalContext\";\r\n\r\nimport ScoreCard from \"../ScoreCard/index\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport \"./Board.css\";\r\n\r\nconst spots = [\r\n  { id: 0, value: \"20\" },\r\n  { id: 1, value: \"19\" },\r\n  { id: 2, value: \"18\" },\r\n  { id: 3, value: \"17\" },\r\n  { id: 4, value: \"16\" },\r\n  { id: 5, value: \"15\" },\r\n  { id: 6, value: \"Bull\" }\r\n];\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiListItem: {\r\n      root: {\r\n        display: \"block\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport class Board extends Component {\r\n  static contextType = GlobalContext;\r\n  render() {\r\n    const { team1, team2 } = this.context.data;\r\n    const { clearBoard } = this.context;\r\n\r\n    if (team1 === null || team2 === null) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    return (\r\n      <div id=\"board-background\">\r\n        <AppBar position=\"static\" id=\"topBar\">\r\n          <div>\r\n            <Toolbar>\r\n              <div id=\"title-container\">\r\n                <Typography id=\"title\">Cricket Board</Typography>\r\n              </div>\r\n            </Toolbar>\r\n          </div>\r\n        </AppBar>\r\n\r\n        <div id=\"score-container\">\r\n          <ScoreCard spots={team1} num={1} />\r\n\r\n          <div id=\"numbers-list\">\r\n            <List className=\"values-list\">\r\n              <ThemeProvider theme={theme}>\r\n                {spots.map(s => (\r\n                  <ListItem key={s.value} className=\"value-text-container\">\r\n                    <Typography className=\"value-text\">{s.value}</Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </ThemeProvider>\r\n            </List>\r\n          </div>\r\n\r\n          <ScoreCard spots={team2} num={2} />\r\n        </div>\r\n\r\n        <BottomNavigation showLabels id=\"bottomBar\">\r\n          <BottomNavigationAction\r\n            label=\"Undo\"\r\n            icon={<Replay />}\r\n            className=\"bottom-buttons\"\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Reset\"\r\n            icon={<Cancel />}\r\n            onClick={clearBoard}\r\n            className=\"bottom-buttons\"\r\n          />\r\n        </BottomNavigation>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import Board from \"./Board\";\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\nimport GlobalProvider from \"./lib/GlobalProvider\";\n\nimport Board from \"./component/Board/index\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <GlobalProvider>\n          <Board />\n        </GlobalProvider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}